#!/bin/zsh

function ls-panel {
    # for debug
    local field=ls-panel

    # key bindings
    local key_enter=${FUZZY_FS_KEY_ENTER:-Enter}
    local key_delete=${FUZZY_FS_KEY_DELETE:-Ctrl-D}
    local key_exit=${FUZZY_FS_KEY_EXIT:-Ctrl-Q}
    local key_parent=${FUZZY_FS_KEY_PARENT:-Ctrl-U}
    local key_edit=${FUZZY_FS_KEY_EDIT:-Ctrl-O}
    # local key_run=${FUZZY_FS_KEY_RUN:-Ctrl-R}
    local key_find=${FUZZY_FS_KEY_FIND:-Ctrl-F}
    local key_run_query=${FUZZY_FS_KEY_RUN_QUERY:-Ctrl-Y}
    local key_toggle_hidden=${FUZZY_FS_KEY_TOGGLE_HIDDEN:-Ctrl-A}
    local key_shell=${FUZZY_FS_KEY_SHELL:-Ctrl-I}

    # parameters and settings
    local pwd="$1"
    local init_query="$2"
    [[ -z "$no_color" ]] && local color_param=--ansi
    debug_var color_param

    # get header
    local header
    if [[ -z "$no_header" ]] {
        header+=$'\n'$(green "Open:")$'\t'$(white "$key_enter")$'\t'$(green "Delete:")$'\t'$(white "$key_delete")$'\t'$(green "Edit:")$'\t'$(white "$key_edit")
        header+=$'\n'$(green "Exit:")$'\t'$(white "$key_exit")
        header+=$'\n'$(green "Go parent:")$'\t'$(white "$key_parent")
        header+=$'\n'$(green "Toggle Hidden:")$'\t'$(white "$key_toggle_hidden")
        header+=$'\n'$(green "Find Recursively:")$'\t'$(white "$key_find")
        header+=$'\n'$(green "Start Shell Here:")$'\t'$(white "$key_shell")
        header+=$'\n'$(green "Run Query as Command:")$'\t'$(white "$key_run_query")
        header+=$'\n'$'\n'
    } else {
        header=""
    }
    header+="$(yellow Directory:) $(red $pwd)"
    header+=$'\n'" "

    function list-all () {
        list-file $*
        echo ""
        list-ancestors $*
        echo ""
        list-history $*
        echo ""
        list-recent-dir
    }

    debug_var no_color
    # show fzf and get result
    local res=$(
        list-all $pwd | \
            fzf --prompt="Filter: " \
                $no_color \
                --no-sort \
                --no-multi \
                --header="$header" \
                --print-query \
                --query="$init_query" \
                --height=100% \
                $color_param \
                --preview="$preview_command $no_color $pwd/{-1}" \
                --bind "Ctrl-C:clear-query" \
                --expect "$key_enter,$key_delete,$key_exit,$key_parent,$key_edit,$key_run_query,$key_find,$key_toggle_hidden,$key_shell"
       )

    debug_var res

    # if fzf returned successfully, return
    if [[ $? = 0 ]] {
        local query=$(echo $res | head -n1)
        local key=$(echo $res | head -n2 | tail -n1)
        local item=$(echo $res | tail -n+3)
        debug_var key
        debug_var item
        echo $query
        case "$key" in
            $key_enter)
                case "$item" in
                    "$command_icon"*)
                        echo run
                        echo $item[$(($#command_icon+1)),-1]
                        ;;
                    "$directory_icon"*)
                        echo cd
                        filename=$pwd/$(echo $item | awk '{print $NF}')
                        echo $filename
                        ;;
                    "$file_icon"*)
                        echo open
                        local filename=$pwd/$(echo $item | awk '{print $NF}')
                        echo $filename
                        ;;
                    "$ancestor_icon"*|"$recent_dir_icon"*)
                        echo cd
                        local filename=$(echo $item | awk '{print $NF}')
                        echo $filename
                        ;;
                esac
                ;;
            $key_parent)
                echo cd
                echo $(dirname $pwd)
                ;;
            $key_delete)
                echo rm
                local filename=$pwd/$(echo $item | awk '{print $NF}')
                echo $filename
                ;;
            $key_edit)
                echo edit
                local filename=$pwd/$(echo $item | awk '{print $NF}')
                echo $filename
                ;;
            # $key_run)
            #     echo run_file
            #     filename=$pwd/$(echo $item | awk '{print $NF}')
            #     echo $filename
            #     ;;
            $key_find)
                echo find
                ;;
            $key_run_query)
                echo run
                echo $query
                ;;
            $key_toggle_hidden)
                echo toggle_hidden
                ;;
            $key_shell)
                echo shell
                debug "processing key-shell..."
                case $item in
                    "$ancestor_icon"*|"$recent_dir_icon"*)
                        debug "open shell in the pointed target"
                        local filename=$(echo $item | awk '{print $NF}')
                        debug_var filename
                        if [[ -f $filename ]] {
                            echo $(dirname $filename)
                        } else {
                            echo $filename
                        }
                        ;;
                    "$command_icon"*|"$directory_icon"*|"$file_icon"*)
                        debug "open shell in the current path"
                        debug_var pwd
                        echo $pwd
                        ;;
                esac
                ;;
            $key_exit)
                echo exit
                ;;
        esac
    } else {
        # else return exception
        echo exception
    }
}
