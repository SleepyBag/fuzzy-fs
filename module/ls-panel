#!/bin/zsh

function ls-panel {
    # for debug
    local field=ls-panel

    # key bindings
    local key_enter=${FUZZY_FS_KEY_ENTER:-Enter}
    local key_delete=${FUZZY_FS_KEY_DELETE:-Ctrl-D}
    local key_exit=${FUZZY_FS_KEY_EXIT:-Ctrl-C}
    local key_parent=${FUZZY_FS_KEY_PARENT:-Ctrl-U}
    local key_edit=${FUZZY_FS_KEY_EDIT:-Ctrl-E}
    # local key_run=${FUZZY_FS_KEY_RUN:-Ctrl-R}
    local key_find=${FUZZY_FS_KEY_FIND:-Ctrl-F}
    local key_run_query=${FUZZY_FS_KEY_RUN_QUERY:-Ctrl-Y}
    local key_toggle_hidden=${FUZZY_FS_KEY_TOGGLE_HIDDEN:-Ctrl-A}
    local key_shell=${FUZZY_FS_KEY_SHELL:-Ctrl-O}

    # parameters and settings
    local current_dir="$1"
    local init_query="$2"
    [[ -z "$no_color" ]] && color_param=--ansi
    debug_var color_param

    # get header
    local header
    header+=$'\n'$(green "Open:")$'\t'$(white "$key_enter")$'\t'$(green "Delete:")$'\t'$(white "$key_delete")$'\t'$(green "Edit:")$'\t'$(white "$key_edit")
    header+=$'\n'$(green "Exit:")$'\t'$(white "$key_exit")$'\t'$(green "Go parent:")$'\t'$(white "$key_parent")
    header+=$'\n'$(green "Run Query as Command:")$'\t'$(white "$key_run_query")$'\t'$(green "Find Recursively:")$'\t'$(white "$key_find")
    header+=$'\n'$(green "Toggle Hidden:")$'\t'$(white "$key_toggle_hidden")$'\t'$(green "Start Shell Here:")$'\t'$(white "$key_shell")
    header+=$'\n'$'\n'
    header+="$(yellow Directory:) $(red $current_dir)"
    header+=$'\n'" "

    function list-all () {
        ${=ls_command} $*
        echo ""
        ${=ancestors_command} $*
        echo ""
        ${=history_command} $*
        echo ""
        ${=ls_recent_command}
    }

    # show fzf and get result
    local res=$(
        list-all $current_dir | \
            fzf --prompt="Filter: " \
                --no-sort \
                --no-multi \
                --header="$header" \
                --print-query \
                --query="$init_query" \
                --height=100% \
                $color_param \
                --preview="$preview_command $current_dir/{-1}" \
                --expect "$key_enter,$key_delete,$key_exit,$key_parent,$key_edit,$key_run_query,$key_find,$key_toggle_hidden,$key_shell"
       )

    debug_var res

    # if fzf returned successfully, return
    if [[ $? = 0 ]] {
        query=$(echo $res | head -n1)
        key=$(echo $res | head -n2 | tail -n1)
        item=$(echo $res | tail -n+3)
        debug_var key
        debug_var item
        echo $query
        case "$key" in
            $key_enter)
                case $(echo $item | awk '{print $1}') in
                    $command_icon)
                        echo run
                        echo $item | awk '{$1=""; print $0}'
                        ;;
                    $directory_icon)
                        echo cd
                        filename=$current_dir/$(echo $item | awk '{print $NF}')
                        echo $filename
                        ;;
                    $file_icon)
                        echo open
                        filename=$current_dir/$(echo $item | awk '{print $NF}')
                        echo $filename
                        ;;
                    $ancestor_icon|$recent_dir_icon)
                        echo cd
                        filename=$(echo $item | awk '{print $NF}')
                        echo $filename
                esac
                ;;
            $key_parent)
                echo cd
                echo $(dirname $current_dir)
                ;;
            $key_delete)
                echo rm
                filename=$current_dir/$(echo $item | awk '{print $NF}')
                echo $filename
                ;;
            $key_edit)
                echo edit
                filename=$current_dir/$(echo $item | awk '{print $NF}')
                echo $filename
                ;;
            # $key_run)
            #     echo run_file
            #     filename=$current_dir/$(echo $item | awk '{print $NF}')
            #     echo $filename
            #     ;;
            $key_find)
                echo find
                ;;
            $key_run_query)
                echo run
                echo $query
                ;;
            $key_toggle_hidden)
                echo toggle_hidden
                ;;
            $key_shell)
                echo shell
                ;;
            $key_exit)
                echo exit
                ;;
        esac
    } else {
        # else return exception
        echo exception
    }
}
